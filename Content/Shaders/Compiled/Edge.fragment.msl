#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_FragmentUniforms
{
    float4 EdgeColor;
    float2 Pixel;
};

struct fragment_main_out
{
    float4 out_var_SV_Target0 [[color(0)]];
};

struct fragment_main_in
{
    float2 in_var_TEXCOORD0 [[user(locn0)]];
};

fragment fragment_main_out fragment_main(fragment_main_in in [[stage_in]], constant type_FragmentUniforms& FragmentUniforms [[buffer(0)]], texture2d<float> Texture [[texture(0)]], texture2d<float> Depth [[texture(1)]], sampler TextureSampler [[sampler(0)]], sampler DepthSampler [[sampler(1)]])
{
    fragment_main_out out = {};
    float4 _76 = Texture.sample(TextureSampler, in.in_var_TEXCOORD0);
    out.out_var_SV_Target0 = float4(mix(_76.xyz, FragmentUniforms.EdgeColor.xyz, float3(step(0.001000000047497451305389404296875, (0.25 * (((Depth.sample(DepthSampler, (in.in_var_TEXCOORD0 + float2(FragmentUniforms.Pixel.x, 0.0))).x + Depth.sample(DepthSampler, (in.in_var_TEXCOORD0 + float2(-FragmentUniforms.Pixel.x, 0.0))).x) + Depth.sample(DepthSampler, (in.in_var_TEXCOORD0 + float2(0.0, FragmentUniforms.Pixel.y))).x) + Depth.sample(DepthSampler, (in.in_var_TEXCOORD0 + float2(0.0, -FragmentUniforms.Pixel.y))).x)) - Depth.sample(DepthSampler, in.in_var_TEXCOORD0).x) * 0.699999988079071044921875)), _76.w);
    return out;
}

